@using FastPass.Models;
@using FastPass.UI.Services;
@using Hl7.Fhir.Model;
@using Hl7.Fhir.Serialization;
@using Task = System.Threading.Tasks.Task;
@inject ApiService _apiService;

<EditForm Model="@TextAnalyticsProxyRequest" OnValidSubmit="@SubmitTextAsync" class="form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="textToAnalyzeInput" class="form-label">Input Text</label>
        <InputTextArea id="textToAnalyzeInput" @bind-Value="TextAnalyticsProxyRequest.TextToAnalyze" class="form-control" rows="10" />
    </div>
    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</EditForm>

@code {
    TextAnalyticsProxyRequest TextAnalyticsProxyRequest = new TextAnalyticsProxyRequest
        {
            Id = Guid.NewGuid().ToString(),
            Language = "en"
        };

    [Parameter]
    public Bundle Value { get; set; } = default!;

    [Parameter]
    public EventCallback<Bundle> ValueChanged { get; set; }

    private async Task SubmitTextAsync()
    {
        var bundle = await _apiService.AnalyzeTextAsync(TextAnalyticsProxyRequest);

        Value = bundle;

        await ValueChanged.InvokeAsync(Value);
    }
}
